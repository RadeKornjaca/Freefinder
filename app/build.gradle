apply plugin: 'com.android.application'
apply plugin: 'realm-android'

android {
    compileSdkVersion 25
    buildToolsVersion "25.0.0"
    defaultConfig {
        applicationId "org.freefinder"
        minSdkVersion 16
        targetSdkVersion 25
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true
    }
    buildTypes {
        def hostname = getLocalIp("wlo1")
        def api_url = "\"http://${hostname}:5200/api\""

        debug {
            buildConfigField 'String', 'API_URL', api_url
            buildConfigField 'String', 'USERS', '"users"'
            buildConfigField 'String', 'DEVICE_SIGN_IN', '"device_sign_in"'
            buildConfigField 'String', 'CATEGORIES', '"categories"'
            buildConfigField 'String', 'PLACES', '"places"'
            buildConfigField 'String', 'RATINGS', '"ratings"'
            buildConfigField 'String', 'REVISIONS', '"revisions"'
        }

        release {
            buildConfigField 'String', 'API_URL', api_url
            buildConfigField 'String', 'USERS', '"users"'
            buildConfigField 'String', 'DEVICE_SIGN_IN', '"device_sign_in"'
            buildConfigField 'String', 'CATEGORIES', '"categories"'
            buildConfigField 'String', 'PLACES', '"places"'
            buildConfigField 'String', 'RATINGS', '"ratings"'
            buildConfigField 'String', 'REVISIONS', '"revisions"'

            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })

    // compile 'com.michaelpardo:activeandroid:3.1.0-SNAPSHOT'

    compile 'com.android.support:appcompat-v7:25.3.1'
    compile 'com.android.support:support-v4:25.3.1'
    compile 'com.android.support:design:25.3.1'
    compile 'com.android.support:recyclerview-v7:25.3.1'
    compile 'com.android.support.constraint:constraint-layout:1.0.1'
    compile 'com.android.volley:volley:1.0.0'
    compile 'com.google.code.gson:gson:2.8.2'
    compile 'org.osmdroid:osmdroid-android:5.6.4'
    compile 'com.github.MKergall:osmbonuspack:6.4'
    compile 'com.jakewharton:butterknife:8.7.0'
    compile 'io.realm:android-adapters:2.0.0'
    testCompile 'junit:junit:4.12'
    testCompile 'org.hamcrest:hamcrest-library:1.3'
    testCompile 'org.mockito:mockito-core:1.10.19'
    annotationProcessor 'com.jakewharton:butterknife-compiler:8.7.0'
}

// Get the ip address by interface name
def getLocalIp(String interfaceName) {
    NetworkInterface iface = NetworkInterface.getByName(interfaceName);
    for (InterfaceAddress address : iface.getInterfaceAddresses()) {
        String ip = address.getAddress().getHostAddress()
        if (ip.length() <= 15) {
            return ip;
        }
    }
}
